type Query {
    # 用户相关
    findUserByFuzzy(username: String!, page: Int = 0, pageSize: Int = 10): [User!]!
    findUserById(userIds: [String!]!): [User!]!

    # 赛事相关
    findMatchById(matchId: String!): Match
    findMatches(matchIds: [String!]!): [Match]

    # 全局相关
    listMatchTypes: [MatchType!]!
}

type User {
    userId: String
    username: String!
    gender: String!
    mobile: String
    email: String
}

type Match {
    matchId: String!
    matchTypeId: String!
    organizerUserId: String!
    name: String!
    description: String!
    participants: [String!]
    referees: [String!]
}

type MatchType {
    matchTypeId: String!
    matchTypeName: String!
    matchScoreboardTypes: [ScoreboardInfo!]
}

type ScoreboardInfo {
    scoreboardTypeId: String
    scoreboardTypeName: String
    configParameters: [ScoreboardConfigParameter!]
}

type ScoreboardConfigParameter {
    key: String
    displayName: String
    defaultValue: String
    required: Boolean
    fieldType: String
}